import 'dart:async';
//////////////////////////////////////////////////////////
// GENERATED BY FLUTTIFY. DO NOT EDIT IT.
//////////////////////////////////////////////////////////

import 'dart:typed_data';

import 'package:flutter/services.dart';

import 'package:ddshare_fluttify/src/android/android.export.g.dart';

final _channel = MethodChannel('com.fluttify/ddshare_fluttify');

Future<com_android_dingtalk_share_ddsharemodule_plugin_SignatureCheck>
    createcomAndroidDingtalkShareDdsharemodulePluginSignatureCheck() async {
  final int refId = await _channel.invokeMethod(
      'ObjectFactory::createcom_android_dingtalk_share_ddsharemodule_plugin_SignatureCheck__');
  final object =
      com_android_dingtalk_share_ddsharemodule_plugin_SignatureCheck()
        ..refId = refId
        ..tag__ = 'ddshare_fluttify';

  kNativeObjectPool.add(object);
  return object;
}

Future<com_android_dingtalk_share_ddsharemodule_plugin_DDVersionCheck>
    createcomAndroidDingtalkShareDdsharemodulePluginDDVersionCheck() async {
  final int refId = await _channel.invokeMethod(
      'ObjectFactory::createcom_android_dingtalk_share_ddsharemodule_plugin_DDVersionCheck__');
  final object =
      com_android_dingtalk_share_ddsharemodule_plugin_DDVersionCheck()
        ..refId = refId
        ..tag__ = 'ddshare_fluttify';

  kNativeObjectPool.add(object);
  return object;
}

Future<com_android_dingtalk_share_ddsharemodule_MMessageUtil>
    createcomAndroidDingtalkShareDdsharemoduleMMessageUtil() async {
  final int refId = await _channel.invokeMethod(
      'ObjectFactory::createcom_android_dingtalk_share_ddsharemodule_MMessageUtil__');
  final object = com_android_dingtalk_share_ddsharemodule_MMessageUtil()
    ..refId = refId
    ..tag__ = 'ddshare_fluttify';

  kNativeObjectPool.add(object);
  return object;
}

Future<com_android_dingtalk_share_ddsharemodule_message_DDTextMessage>
    createcom_android_dingtalk_share_ddsharemodule_message_DDTextMessage() async {
  final int refId = await _channel.invokeMethod(
      'ObjectFactory::createcom_android_dingtalk_share_ddsharemodule_message_DDTextMessage__');
  final object =
      com_android_dingtalk_share_ddsharemodule_message_DDTextMessage()
        ..refId = refId
        ..tag__ = 'ddshare_fluttify';

  kNativeObjectPool.add(object);
  return object;
}

Future<com_android_dingtalk_share_ddsharemodule_message_DDMediaMessage>
    createcom_android_dingtalk_share_ddsharemodule_message_DDMediaMessage() async {
  final int refId = await _channel.invokeMethod(
      'ObjectFactory::createcom_android_dingtalk_share_ddsharemodule_message_DDMediaMessage__');
  final object =
      com_android_dingtalk_share_ddsharemodule_message_DDMediaMessage()
        ..refId = refId
        ..tag__ = 'ddshare_fluttify';

  kNativeObjectPool.add(object);
  return object;
}

Future<com_android_dingtalk_share_ddsharemodule_message_SendMessageToDD_Resp>
    createcom_android_dingtalk_share_ddsharemodule_message_SendMessageToDD_Resp() async {
  final int refId = await _channel.invokeMethod(
      'ObjectFactory::createcom_android_dingtalk_share_ddsharemodule_message_SendMessageToDD_Resp__');
  final object =
      com_android_dingtalk_share_ddsharemodule_message_SendMessageToDD_Resp()
        ..refId = refId
        ..tag__ = 'ddshare_fluttify';

  kNativeObjectPool.add(object);
  return object;
}

Future<com_android_dingtalk_share_ddsharemodule_message_SendMessageToDD_Resp>
    createcom_android_dingtalk_share_ddsharemodule_message_SendMessageToDD_Resp__android_os_Bundle(
        android_os_Bundle bundle) async {
  final int refId = await _channel.invokeMethod(
      'ObjectFactory::createcom_android_dingtalk_share_ddsharemodule_message_SendMessageToDD_Resp__android_os_Bundle',
      {"bundle": bundle.refId});
  final object =
      com_android_dingtalk_share_ddsharemodule_message_SendMessageToDD_Resp()
        ..refId = refId
        ..tag__ = 'ddshare_fluttify';

  kNativeObjectPool.add(object);
  return object;
}

Future<com_android_dingtalk_share_ddsharemodule_message_SendMessageToDD_Req>
    createcom_android_dingtalk_share_ddsharemodule_message_SendMessageToDD_Req() async {
  final int refId = await _channel.invokeMethod(
      'ObjectFactory::createcom_android_dingtalk_share_ddsharemodule_message_SendMessageToDD_Req__');
  final object =
      com_android_dingtalk_share_ddsharemodule_message_SendMessageToDD_Req()
        ..refId = refId
        ..tag__ = 'ddshare_fluttify';

  kNativeObjectPool.add(object);
  return object;
}

Future<com_android_dingtalk_share_ddsharemodule_message_SendMessageToDD_Req>
    createcom_android_dingtalk_share_ddsharemodule_message_SendMessageToDD_Req__android_os_Bundle(
        android_os_Bundle bundle) async {
  final int refId = await _channel.invokeMethod(
      'ObjectFactory::createcom_android_dingtalk_share_ddsharemodule_message_SendMessageToDD_Req__android_os_Bundle',
      {"bundle": bundle.refId});
  final object =
      com_android_dingtalk_share_ddsharemodule_message_SendMessageToDD_Req()
        ..refId = refId
        ..tag__ = 'ddshare_fluttify';

  kNativeObjectPool.add(object);
  return object;
}

Future<com_android_dingtalk_share_ddsharemodule_message_DDMediaMessage_Builder>
    createcom_android_dingtalk_share_ddsharemodule_message_DDMediaMessage_Builder() async {
  final int refId = await _channel.invokeMethod(
      'ObjectFactory::createcom_android_dingtalk_share_ddsharemodule_message_DDMediaMessage_Builder__');
  final object =
      com_android_dingtalk_share_ddsharemodule_message_DDMediaMessage_Builder()
        ..refId = refId
        ..tag__ = 'ddshare_fluttify';

  kNativeObjectPool.add(object);
  return object;
}

Future<com_android_dingtalk_share_ddsharemodule_message_SendAuth>
    createcom_android_dingtalk_share_ddsharemodule_message_SendAuth() async {
  final int refId = await _channel.invokeMethod(
      'ObjectFactory::createcom_android_dingtalk_share_ddsharemodule_message_SendAuth__');
  final object = com_android_dingtalk_share_ddsharemodule_message_SendAuth()
    ..refId = refId
    ..tag__ = 'ddshare_fluttify';

  kNativeObjectPool.add(object);
  return object;
}

Future<com_android_dingtalk_share_ddsharemodule_message_SendAuth_Resp>
    createcom_android_dingtalk_share_ddsharemodule_message_SendAuth_Resp() async {
  final int refId = await _channel.invokeMethod(
      'ObjectFactory::createcom_android_dingtalk_share_ddsharemodule_message_SendAuth_Resp__');
  final object =
      com_android_dingtalk_share_ddsharemodule_message_SendAuth_Resp()
        ..refId = refId
        ..tag__ = 'ddshare_fluttify';

  kNativeObjectPool.add(object);
  return object;
}

Future<com_android_dingtalk_share_ddsharemodule_message_DDImageMessage>
    createcom_android_dingtalk_share_ddsharemodule_message_DDImageMessage() async {
  final int refId = await _channel.invokeMethod(
      'ObjectFactory::createcom_android_dingtalk_share_ddsharemodule_message_DDImageMessage__');
  final object =
      com_android_dingtalk_share_ddsharemodule_message_DDImageMessage()
        ..refId = refId
        ..tag__ = 'ddshare_fluttify';

  kNativeObjectPool.add(object);
  return object;
}

Future<com_android_dingtalk_share_ddsharemodule_message_DDImageMessage>
    createcom_android_dingtalk_share_ddsharemodule_message_DDImageMessage__byteArray(
        Uint8List imageData) async {
  final int refId = await _channel.invokeMethod(
      'ObjectFactory::createcom_android_dingtalk_share_ddsharemodule_message_DDImageMessage__byteArray',
      {"imageData": imageData});
  final object =
      com_android_dingtalk_share_ddsharemodule_message_DDImageMessage()
        ..refId = refId
        ..tag__ = 'ddshare_fluttify';

  kNativeObjectPool.add(object);
  return object;
}

Future<com_android_dingtalk_share_ddsharemodule_message_DDImageMessage>
    createcom_android_dingtalk_share_ddsharemodule_message_DDImageMessage__android_graphics_Bitmap(
        android_graphics_Bitmap bitmap) async {
  final int refId = await _channel.invokeMethod(
      'ObjectFactory::createcom_android_dingtalk_share_ddsharemodule_message_DDImageMessage__android_graphics_Bitmap',
      {"bitmap": bitmap.refId});
  final object =
      com_android_dingtalk_share_ddsharemodule_message_DDImageMessage()
        ..refId = refId
        ..tag__ = 'ddshare_fluttify';

  kNativeObjectPool.add(object);
  return object;
}

Future<com_android_dingtalk_share_ddsharemodule_message_SendAuth_Req>
    createcom_android_dingtalk_share_ddsharemodule_message_SendAuth_Req() async {
  final int refId = await _channel.invokeMethod(
      'ObjectFactory::createcom_android_dingtalk_share_ddsharemodule_message_SendAuth_Req__');
  final object = com_android_dingtalk_share_ddsharemodule_message_SendAuth_Req()
    ..refId = refId
    ..tag__ = 'ddshare_fluttify';

  kNativeObjectPool.add(object);
  return object;
}

Future<com_android_dingtalk_share_ddsharemodule_message_DDMessage>
    createcom_android_dingtalk_share_ddsharemodule_message_DDMessage() async {
  final int refId = await _channel.invokeMethod(
      'ObjectFactory::createcom_android_dingtalk_share_ddsharemodule_message_DDMessage__');
  final object = com_android_dingtalk_share_ddsharemodule_message_DDMessage()
    ..refId = refId
    ..tag__ = 'ddshare_fluttify';

  kNativeObjectPool.add(object);
  return object;
}

Future<com_android_dingtalk_share_ddsharemodule_message_DDWebpageMessage>
    createcom_android_dingtalk_share_ddsharemodule_message_DDWebpageMessage() async {
  final int refId = await _channel.invokeMethod(
      'ObjectFactory::createcom_android_dingtalk_share_ddsharemodule_message_DDWebpageMessage__');
  final object =
      com_android_dingtalk_share_ddsharemodule_message_DDWebpageMessage()
        ..refId = refId
        ..tag__ = 'ddshare_fluttify';

  kNativeObjectPool.add(object);
  return object;
}

Future<com_android_dingtalk_share_ddsharemodule_message_DDZhiFuBaoMesseage>
    createcom_android_dingtalk_share_ddsharemodule_message_DDZhiFuBaoMesseage() async {
  final int refId = await _channel.invokeMethod(
      'ObjectFactory::createcom_android_dingtalk_share_ddsharemodule_message_DDZhiFuBaoMesseage__');
  final object =
      com_android_dingtalk_share_ddsharemodule_message_DDZhiFuBaoMesseage()
        ..refId = refId
        ..tag__ = 'ddshare_fluttify';

  kNativeObjectPool.add(object);
  return object;
}

Future<com_android_dingtalk_share_ddsharemodule_message_DDVideoMessage>
    createcom_android_dingtalk_share_ddsharemodule_message_DDVideoMessage() async {
  final int refId = await _channel.invokeMethod(
      'ObjectFactory::createcom_android_dingtalk_share_ddsharemodule_message_DDVideoMessage__');
  final object =
      com_android_dingtalk_share_ddsharemodule_message_DDVideoMessage()
        ..refId = refId
        ..tag__ = 'ddshare_fluttify';

  kNativeObjectPool.add(object);
  return object;
}

Future<com_android_dingtalk_share_ddsharemodule_message_DDMessageAct>
    createcom_android_dingtalk_share_ddsharemodule_message_DDMessageAct() async {
  final int refId = await _channel.invokeMethod(
      'ObjectFactory::createcom_android_dingtalk_share_ddsharemodule_message_DDMessageAct__');
  final object = com_android_dingtalk_share_ddsharemodule_message_DDMessageAct()
    ..refId = refId
    ..tag__ = 'ddshare_fluttify';

  kNativeObjectPool.add(object);
  return object;
}

Future<com_android_dingtalk_share_ddsharemodule_message_DDFileMessage>
    createcom_android_dingtalk_share_ddsharemodule_message_DDFileMessage() async {
  final int refId = await _channel.invokeMethod(
      'ObjectFactory::createcom_android_dingtalk_share_ddsharemodule_message_DDFileMessage__');
  final object =
      com_android_dingtalk_share_ddsharemodule_message_DDFileMessage()
        ..refId = refId
        ..tag__ = 'ddshare_fluttify';

  kNativeObjectPool.add(object);
  return object;
}

Future<com_android_dingtalk_share_ddsharemodule_message_SendMessageToDD>
    createcom_android_dingtalk_share_ddsharemodule_message_SendMessageToDD() async {
  final int refId = await _channel.invokeMethod(
      'ObjectFactory::createcom_android_dingtalk_share_ddsharemodule_message_SendMessageToDD__');
  final object =
      com_android_dingtalk_share_ddsharemodule_message_SendMessageToDD()
        ..refId = refId
        ..tag__ = 'ddshare_fluttify';

  kNativeObjectPool.add(object);
  return object;
}

Future<com_android_dingtalk_share_ddsharemodule_message_DDAudioMessage>
    createcom_android_dingtalk_share_ddsharemodule_message_DDAudioMessage() async {
  final int refId = await _channel.invokeMethod(
      'ObjectFactory::createcom_android_dingtalk_share_ddsharemodule_message_DDAudioMessage__');
  final object =
      com_android_dingtalk_share_ddsharemodule_message_DDAudioMessage()
        ..refId = refId
        ..tag__ = 'ddshare_fluttify';

  kNativeObjectPool.add(object);
  return object;
}

Future<com_android_dingtalk_share_ddsharemodule_algorithm_MD5>
    createcom_android_dingtalk_share_ddsharemodule_algorithm_MD5() async {
  final int refId = await _channel.invokeMethod(
      'ObjectFactory::createcom_android_dingtalk_share_ddsharemodule_algorithm_MD5__');
  final object = com_android_dingtalk_share_ddsharemodule_algorithm_MD5()
    ..refId = refId
    ..tag__ = 'ddshare_fluttify';

  kNativeObjectPool.add(object);
  return object;
}

Future<com_android_dingtalk_share_ddsharemodule_DDShareApiFactory>
    createcom_android_dingtalk_share_ddsharemodule_DDShareApiFactory() async {
  final int refId = await _channel.invokeMethod(
      'ObjectFactory::createcom_android_dingtalk_share_ddsharemodule_DDShareApiFactory__');
  final object = com_android_dingtalk_share_ddsharemodule_DDShareApiFactory()
    ..refId = refId
    ..tag__ = 'ddshare_fluttify';

  kNativeObjectPool.add(object);
  return object;
}

Future<com_android_dingtalk_share_ddsharemodule_DDShareApiV2>
    createcom_android_dingtalk_share_ddsharemodule_DDShareApiV2__android_content_Context__String__boolean(
        android_content_Context context,
        String appId,
        bool needSignatureCheck) async {
  final int refId = await _channel.invokeMethod(
      'ObjectFactory::createcom_android_dingtalk_share_ddsharemodule_DDShareApiV2__android_content_Context__String__boolean',
      {
        "context": context.refId,
        "appId": appId,
        "needSignatureCheck": needSignatureCheck
      });
  final object = com_android_dingtalk_share_ddsharemodule_DDShareApiV2()
    ..refId = refId
    ..tag__ = 'ddshare_fluttify';

  kNativeObjectPool.add(object);
  return object;
}

Future<com_android_dingtalk_share_ddsharemodule_ShareConstant>
    createcom_android_dingtalk_share_ddsharemodule_ShareConstant() async {
  final int refId = await _channel.invokeMethod(
      'ObjectFactory::createcom_android_dingtalk_share_ddsharemodule_ShareConstant__');
  final object = com_android_dingtalk_share_ddsharemodule_ShareConstant()
    ..refId = refId
    ..tag__ = 'ddshare_fluttify';

  kNativeObjectPool.add(object);
  return object;
}
